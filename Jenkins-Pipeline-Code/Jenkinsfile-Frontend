pipeline {
    agent any 
    tools {
        jdk 'jdk'
        nodejs 'nodejs'
    }
    environment  {
        DOCKER_REPO_NAME = 'rsduran/frontend'
        DOCKERHUB_CREDENTIALS_ID = 'docker'
    }
    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git branch: 'main', credentialsId: 'github', url: 'https://github.com/rsduran/quiz-app-image-links.git'
            }
        }
        
        // Uncomment SonarQube Analysis and Quality Check stages if needed
        // stage('Sonarqube Analysis') {
        //     steps {
        //         dir('frontend') {
        //             withSonarQubeEnv('sonar-server') {
        //                 sh ''' $SCANNER_HOME/bin/sonar-scanner \
        //                 -Dsonar.projectName=three-tier-frontend \
        //                 -Dsonar.projectKey=three-tier-frontend '''
        //             }
        //         }
        //     }
        // }
        
        // stage('Quality Check') {
        //     steps {
        //         script {
        //             waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token' 
        //         }
        //     }
        // }
        
        // stage('Trivy File Scan') {
        //     steps {
        //         dir('frontend') {
        //             sh 'trivy fs . > trivyfs.txt'
        //         }
        //     }
        // }
        
        stage("Docker Image Build") {
            steps {
                script {
                    dir('frontend') {
                        sh 'docker system prune -f'
                        sh 'docker container prune -f'
                        sh 'docker build -t ${DOCKER_REPO_NAME}:${BUILD_NUMBER} -f Dockerfile.frontend .'
                    }
                }
            }
        }
        stage("DockerHub Image Push") {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', "${DOCKERHUB_CREDENTIALS_ID}") {
                        sh 'docker push ${DOCKER_REPO_NAME}:${BUILD_NUMBER}'
                    }
                }
            }
        }

        // Uncomment Trivy Image Scan stage if needed
        // stage("TRIVY Image Scan") {
        //     steps {
        //         sh 'trivy image ${DOCKER_REPO_NAME}:${BUILD_NUMBER} > trivyimage.txt' 
        //     }
        // }
        
        stage('Update Deployment file') {
            environment {
                GIT_REPO_NAME = "quiz-app-image-links"
                GIT_USER_NAME = "rsduran"
            }
            steps {
                dir('Kubernetes-Manifests/Frontend') {
                    withCredentials([string(credentialsId: 'github_token', variable: 'GITHUB_TOKEN')]) {
                        sh '''
                            git config user.email "reineirsamonteduran@gmail.com"
                            git config user.name "rsduran"
                            BUILD_NUMBER=${BUILD_NUMBER}
                            echo $BUILD_NUMBER
                            imageTag=$(grep -oP '(?<=frontend:)[^ ]+' deployment.yaml)
                            echo $imageTag
                            sed -i "s|${DOCKER_REPO_NAME}:${imageTag}|${DOCKER_REPO_NAME}:${BUILD_NUMBER}|" deployment.yaml
                            git add deployment.yaml
                            git commit -m "Update deployment Image to version \${BUILD_NUMBER}"
                            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                        '''
                    }
                }
            }
        }
    }
}